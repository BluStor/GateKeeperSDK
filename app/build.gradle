apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
        versionCode 22
        versionName "0.15.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'jniLibs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    lintOptions {
        disable "InvalidPackage"
    }

    packagingOptions {
        exclude 'META-INF/LE-832C0.RSA'
        exclude 'META-INF/LE-832C0.SF'
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                output.outputFile = new File("./builds/gatekeepersdk-${defaultConfig.versionName}.aar")
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

afterEvaluate {
    android.libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            title = rootProject.name
            source = variant.javaCompile.source
            ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            destinationDir = file("${getRootDir()}/builds/gatekeepersdk-${android.defaultConfig.versionName}/")
            classpath += files(variant.javaCompile.classpath.files) + files(ext.androidJar)
            classpath += files(getBuildDir())
            options.links("http://docs.oracle.com/javase/7/docs/api/");
            options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
            exclude "**/BuildConfig.java"
            failOnError false
        }
    }
}

clean.dependsOn project.task("deleteCurrentBuilds", type: Delete) {
    delete "${getRootDir()}/builds/gatekeepersdk-${android.defaultConfig.versionName}.aar"
    delete "${getRootDir()}/builds/gatekeepersdk-${android.defaultConfig.versionName}/"
}

dependencies {
    compile fileTree(include: ['*.jar'], exclude: ['*javadoc.jar'], dir: 'libs')
    compile 'com.android.support:support-annotations:23.3.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'org.mockito:mockito-core:2.0.41-beta'
}
