apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

group = properties.get('artifact_group')
version = properties.get('artifact_version_name')
def package_name = properties.get('artifact_name')

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
        versionCode properties.get('artifact_version_code')
        versionName version
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'jniLibs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    lintOptions {
        disable "InvalidPackage"
    }

    packagingOptions {
        exclude 'META-INF/LE-832C0.RSA'
        exclude 'META-INF/LE-832C0.SF'
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                output.outputFile = new File("./builds/gatekeepersdk-${defaultConfig.versionName}.aar")
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

afterEvaluate {
    android.libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            title = rootProject.name
            source = variant.javaCompile.source
            ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            destinationDir = file("${getRootDir()}/builds/gatekeepersdk-${android.defaultConfig.versionName}/")
            classpath += files(variant.javaCompile.classpath.files) + files(ext.androidJar)
            classpath += files(getBuildDir())
            options.links("http://docs.oracle.com/javase/7/docs/api/");
            options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
            exclude "**/BuildConfig.java"
            failOnError false
        }
    }
}

clean.dependsOn project.task("deleteCurrentBuilds", type: Delete) {
    delete "${getRootDir()}/builds/gatekeepersdk-${android.defaultConfig.versionName}.aar"
    delete "${getRootDir()}/builds/gatekeepersdk-${android.defaultConfig.versionName}/"
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            name package_name
            url 'https://github.com/BluStor/GateKeeperSDK'
            licenses {
                license {
                    name 'MIT'
                }
            }
            scm {
                url 'https://github.com/BluStor/GateKeeperSDK'
                connection 'https://github.com/BluStor/GateKeeperSDK.git'
            }
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    Properties props = new Properties()
    props.load(new FileInputStream("local.properties"))
    user = props.getProperty('bintray_user')
    key = props.getProperty('bintray_api_key')
    configurations = ['archives']
    publish = true

    pkg {
        repo = 'maven'
        name = package_name
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/BluStor/GateKeeperSDK.git'
        version {
            name = android.defaultConfig.versionName
            released = new Date()
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], exclude: ['*javadoc.jar'], dir: 'libs')
    compile 'com.android.support:support-annotations:23.4.0'
    compile 'com.google.code.gson:gson:2.6.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'org.mockito:mockito-core:2.0.41-beta'
}